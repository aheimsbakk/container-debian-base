---
on:
  push:
    paths:
      - '.forgejo/**/*.yaml'
      - '.forgejo/**/*.yml'
      - 'Containerfile'
      - 'Dockerfile'
  workflow_dispatch:
  schedule:
  - cron: '0 23 * * *'

env:
  CONTAINER_NAME: debian-base
  CONTAINER_KEEP_COUNT: 6

jobs:
  set-vars:
    runs-on: ubuntu-latest
    outputs:
      container-name: ${{ steps.set_output.outputs.container-name }}
    steps:
      - name: Set output variable
        id: set_output # Important: give this step an ID to reference its outputs
        run: |
          echo "container-name=${{ env.CONTAINER_NAME }}" >> "$GITHUB_OUTPUT"
          echo "Set container-name to: $DYNAMIC_OUTPUT"

  build-container:
    runs-on: ${{ vars.RUNS_ON }}
    needs: set-vars
    strategy:
      matrix:
        container:
          - build-args: |
              RELEASE=bookworm
            tags: |
              ${{ vars.REGISTRY_NAME }}/${{ github.repository_owner }}/${{ needs.set-vars.outputs.container-name }}:latest
              ${{ vars.REGISTRY_NAME }}/${{ github.repository_owner }}/${{ needs.set-vars.outputs.container-name }}:bookworm
            platforms: linux/amd64,linux/arm64
            containerfile: Containerfile
          - build-args: |
              RELEASE=trixie
            tags: |
              ${{ vars.REGISTRY_NAME }}/${{ github.repository_owner }}/${{ needs.set-vars.outputs.container-name }}:trixie
            platforms: linux/amd64,linux/arm64
            containerfile: Containerfile

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Login to non Github registry
        if: ${{ ! contains(github.api_url, 'github' )
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY_NAME }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Login to Github registry
        if: ${{ contains(github.api_url, 'github' )
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.ref == 'refs/heads/main' || github.event_name == 'schedule' }}
          provenance: false
          platforms: ${{ matrix.container.platforms }}
          tags: ${{ matrix.container.tags }}
          file: ${{ matrix.container.containerfile }}
          build-args: ${{ matrix.container.build-args }}

      - name: Clean up old versions
        if: ${{ contains(github.api_url, 'github') && ( github.ref == 'refs/heads/main' || github.event_name == 'schedule' ) }} 
        uses: actions/delete-package-versions@v5
        with:
          package-type: container
          package-name: ${{ needs.set-vars.outputs.container-name }}
          min-versions-to-keep: ${{ env.CONTAINER_KEEP_COUNT }}
          delete-only-untagged-versions: true
